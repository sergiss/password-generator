{"version":3,"sources":["components/Header.js","components/PasswordForm.js","components/PasswordView.js","App.js","reportWebVitals.js","index.js"],"names":["Header","PasswordForm","props","options","setOptions","handleCheckboxChange","e","target","name","checked","handleChange","value","className","style","width","type","length","onChange","min","max","lowercase","uppercase","numbers","symbols","PasswordView","password","score","generate","window","isSecureContext","onClick","navigator","clipboard","writeText","alert","getProgressBarStyle","ALPHABET","NUMBERS","SYMBOLS","includes","a","b","i","charAt","check","pwd","toUpperCase","App","useState","setPassword","data","localStorage","getItem","JSON","parse","useEffect","values","index","Math","floor","random","setItem","stringify","ml","computeScore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ae46eb5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <header>\r\n            <h1>Password Generator</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction PasswordForm(props) {\r\n\r\n  const {options, setOptions} = props;\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    setOptions({\r\n      ...options,\r\n      [e.target.name]: e.target.checked\r\n    });\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    if(e.target.value < 1) {\r\n      e.target.value = 1;\r\n      return;\r\n    }\r\n\r\n    if(e.target.value > 50) {\r\n      e.target.value = 50;\r\n      return;\r\n    }\r\n    setOptions({\r\n      ...options,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <h2 className=\"border-bottom\">Configuration</h2>\r\n      <div className=\"column\">\r\n          <div className=\"row\" >            \r\n            <label style={{width:'75%'}}>Length</label>\r\n            <input type=\"number\" value={options.length} onChange={handleChange} name='length' style={{width:'25%'}} />\r\n          </div>\r\n          <input\r\n            type=\"range\"\r\n            min =\"1\" max=\"50\"\r\n            value={options.length}\r\n            onChange={handleChange}\r\n            name='length'\r\n          />\r\n        </div>\r\n      <div className=\"row\">\r\n        \r\n        <div className=\"column\">\r\n          <label>\r\n            <input type=\"checkbox\" checked = {options.lowercase} name='lowercase' onChange={handleCheckboxChange}/>\r\n            Lowercase\r\n          </label>\r\n          <label>\r\n            <input type=\"checkbox\" checked = {options.uppercase} name='uppercase' onChange={handleCheckboxChange}/>\r\n            Uppercase\r\n          </label>\r\n        </div>\r\n\r\n        <div className=\"column\">\r\n          <label>\r\n            <input type=\"checkbox\" checked = {options.numbers} name='numbers' onChange={handleCheckboxChange}/>\r\n            Numbers\r\n          </label>\r\n          <label>\r\n            <input type=\"checkbox\" checked = {options.symbols} name='symbols' onChange={handleCheckboxChange}/>\r\n            Symbols\r\n          </label>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PasswordForm;\r\n","import React, { Fragment } from \"react\";\r\n\r\nfunction PasswordView(props) {\r\n  const { password, score, generate } = props;\r\n\r\n  const getProgressBarStyle = (score) => {\r\n    let bg;\r\n    if (score > 75) bg = \"bg-green\";\r\n    else if (score > 50) bg = \"bg-blue\";\r\n    else if (score > 25) bg = \"bg-yellow\";\r\n    else bg = \"bg-red\";\r\n    return `progress-bar ${bg}`;\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"pwd-container\">\r\n        <div className=\"row\">\r\n          <h2 className=\"password\">{password}</h2>\r\n          <div className=\"row buttons\">\r\n            { window.isSecureContext ? \r\n              (<button className=\"btn btn-red\" onClick={(e)=> {\r\n                try {\r\n                  navigator.clipboard.writeText(password); // copy\r\n                } catch(e) {\r\n                  alert(\"Function not allowed\");\r\n                }\r\n              }}>Copy</button>):null\r\n            }\r\n            <button className=\"btn btn-blue\" onClick={(e)=> {\r\n              generate();\r\n            }}>Generate</button>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className={getProgressBarStyle(score)} style={{width:`${score}%`}}></div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default PasswordView;\r\n","import { Fragment, useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport PasswordForm from \"./components/PasswordForm\";\nimport PasswordView from \"./components/PasswordView\";\n\nconst ALPHABET = \"abcdefghijklmnopqrstuvwxyz\";\nconst NUMBERS = \"0123456789\";\nconst SYMBOLS = `~\\`!@#$%^&*()_-+={[}]|\\\\:;\"'<,>.?/`;\n\nconst includes = (a, b) => {\n  for(let i = 0; i < b.length; ++i) {\n    if(a.includes(b.charAt(i))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nconst check = (pwd, options) => {  \n  if(options.lowercase && !includes(pwd, ALPHABET)) {\n    return false;\n  }\n  if(options.uppercase && !includes(pwd, ALPHABET.toUpperCase())) {\n    return false;\n  }\n  if(options.numbers   && !includes(pwd, NUMBERS)) {\n    return false;\n  }\n  if(options.symbols   && !includes(pwd, SYMBOLS)) {\n    return false;\n  }\n  return true;\n};\n\nfunction App() {\n\n  const [password, setPassword] = useState(\"\");\n  const [options, setOptions] = useState(()=> {\n    const data = localStorage.getItem(\"password_options\");\n    if(data) {\n      return JSON.parse(data);\n    }\n    return {\n      length: 25,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      symbols: true\n    }\n  });\n\n  useEffect(() => {\n    \n    const { length, uppercase, lowercase, numbers, symbols } = options;\n\n    if(!uppercase && !lowercase && !numbers && !symbols) {\n      setOptions({\n        ...options,\n        lowercase:true\n      })\n      return;\n    }\n\n    let values = \"\";\n    if (uppercase) {\n      values += ALPHABET.toUpperCase();\n    }\n\n    if (lowercase) {\n      values += ALPHABET;\n    }\n\n    if (numbers) {\n      values += NUMBERS;\n    }\n\n    if (symbols) {\n      values += SYMBOLS;\n    }\n\n    let pwd = '';\n    if (values.length > 0) {\n      do {\n        pwd = '';\n        for (let index, i = 0; i < length; ++i) {\n          index = Math.floor(Math.random() * values.length);\n          pwd += values.charAt(index);\n        }\n      } while(pwd.length > 3 && !check(pwd, options));\n    }\n    setPassword(pwd);\n    window.localStorage.setItem(\"password_options\", JSON.stringify(options));\n\n  }, [options]);\n\n  const generate = () => {\n    setOptions({\n      ...options\n    });\n  };\n\n  const computeScore = (password, options) => {\n    let ml = 9 / ( (options.lowercase ? 0.33 : 0) + (options.uppercase ? 0.33 : 0) + (options.numbers ? 0.33 : 0) + (options.symbols ? 0.33 : 0));\n    let cl = Math.max(0, Math.min(password.length - 3, ml));\n    return (cl * 100) / ml;\n  };\n\n  return (\n    <Fragment>\n      <Header />\n      <div className=\"container\">\n        <PasswordView\n          password={password}\n          score={computeScore(password, options)}\n          generate={generate}\n        />\n        <PasswordForm options={options} setOptions={setOptions} />\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}